{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/regexparam/dist/regexparam.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../src/components/UI/Button.svelte","../../node_modules/svelte-spa-router/active.js","../../src/components/Lesson/index.svelte","../../src/components/Questions/types/Radio.svelte","../../src/components/Questions/types/Check.svelte","../../src/components/Questions/types/Insert.svelte","../../src/components/Questions/types/index.svelte","../../src/components/Questions/QuestionArea.svelte","../../node_modules/svelte/transition/index.mjs","../../src/components/Questions/QuestionsNav.svelte","../../src/utils/parse-test-data.js","../../src/components/Questions/index.svelte","../../src/routes.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.18.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_keys, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","<script context=\"module\">\n// Something's wrong with eslint on this file\n/* eslint-disable no-multiple-empty-lines */\n\nimport {readable, derived} from 'svelte/store'\n\n/**\n * Wraps a route to add route pre-conditions.\n * \n * @param {SvelteComponent} route - Svelte component for the route\n * @param {Object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...Function} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {Object} Wrapped route\n */\nexport function wrap(route, userData, ...conditions) {\n    // Check if we don't have userData\n    if (userData && typeof userData == 'function') {\n        conditions = (conditions && conditions.length) ? conditions : []\n        conditions.unshift(userData)\n        userData = undefined\n    }\n\n    // Parameter route and each item of conditions must be functions\n    if (!route || typeof route != 'function') {\n        throw Error('Invalid parameter route')\n    }\n    if (conditions && conditions.length) {\n        for (let i = 0; i < conditions.length; i++) {\n            if (!conditions[i] || typeof conditions[i] != 'function') {\n                throw Error('Invalid parameter conditions[' + i + ']')\n            }\n        }\n    }\n\n    // Returns an object that contains all the functions to execute too\n    const obj = {route, userData}\n    if (conditions && conditions.length) {\n        obj.conditions = conditions\n    }\n\n    // The _sveltesparouter flag is to confirm the object was created by this router\n    Object.defineProperty(obj, '_sveltesparouter', {\n        value: true\n    })\n\n    return obj\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    getLocation(),\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n */\nexport function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n    }, 0)\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n */\nexport function pop() {\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        window.history.back()\n    }, 0)\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n */\nexport function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        const dest = (location.charAt(0) == '#' ? '' : '#') + location\n        history.replaceState(undefined, undefined, dest)\n\n        // The method above doesn't trigger the hashchange event, so let's do that manually\n        window.dispatchEvent(new Event('hashchange'))\n    }, 0)\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n */\nexport function link(node) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    // Destination must start with '/'\n    const href = node.getAttribute('href')\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute')\n    }\n\n    // Add # to every href attribute\n    node.setAttribute('href', '#' + href)\n}\n</script>\n\n<svelte:component this=\"{component}\" params=\"{componentParams}\" />\n\n<script>\nimport {createEventDispatcher} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent} component - Svelte component for the route\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.route\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n        }\n        else {\n            this.component = component\n            this.conditions = []\n            this.userData = undefined\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, remove it before we run the matching\n        if (prefix && path.startsWith(prefix)) {\n            path = path.substr(prefix.length) || '/'\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            out[this._keys[i]] = matches[++i] || null\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {SvelteComponent} component - Svelte component\n     * @property {string} name - Name of the Svelte component\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {Object} [userData] - Custom data passed by the user\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!this.conditions[i](detail)) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// We need an iterable: if it's not a Map, use Object.entries\nconst routesIterable = (routes instanceof Map) ? routes : Object.entries(routes)\n\n// Set up all routes\nconst routesList = []\nfor (const [path, route] of routesIterable) {\n    routesList.push(new RouteItem(path, route))\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nconst dispatchNextTick = (name, detail) => {\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        dispatch(name, detail)\n    }, 0)\n}\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n$: {\n    // Find a route matching the location\n    component = null\n    let i = 0\n    while (!component && i < routesList.length) {\n        const match = routesList[i].match($loc.location)\n        if (match) {\n            const detail = {\n                component: routesList[i].component,\n                name: routesList[i].component.name,\n                location: $loc.location,\n                querystring: $loc.querystring,\n                userData: routesList[i].userData\n            }\n\n            // Check if the route can be loaded - if all conditions succeed\n            if (!routesList[i].checkConditions(detail)) {\n                // Trigger an event to notify the user\n                dispatchNextTick('conditionsFailed', detail)\n                break\n            }\n            component = routesList[i].component\n            componentParams = match\n\n            dispatchNextTick('routeLoaded', detail)\n        }\n        i++\n    }\n}\n</script>\n","<script>\n  export let disabled = false;\n  export let type = \"primary\";\n</script>\n\n<button  \n  on:click\n  class=\"btn btn-{type}\"\n  disabled={disabled}>\n  <slot/>\n</button>\n\n<style>\n  .btn {\n    @apply px-2 py-1;\n    @apply text-white;\n    @apply rounded;\n  }\n  .btn:not(:last-child) {\n    @apply mr-5;\n  }\n  .btn:disabled {\n    @apply bg-grey-3 text-grey-6;\n    @apply border border-grey-5;\n  }\n  /* btn types */\n  .btn-primary {\n    @apply bg-primary;\n  }\n  .btn-primary:not(:disabled):hover {\n    @apply bg-blue-5;\n  }\n  .btn-secondary {\n    @apply border border-grey-5;\n    @apply text-textcolor bg-white;\n  }\n  .btn-secondary:not(:disabled):hover {\n    @apply text-primary border-primary;\n  }\n  .btn-link {\n    @apply flex text-textcolor items-center;\n    @apply p-0;\n  }\n</style>","import regexparam from 'regexparam'\nimport {loc} from './Router.svelte'\n\n// List of nodes to update\nconst nodes = []\n\n// Current location\nlet location\n\n// Function that updates all nodes marking the active ones\nfunction checkActive(el) {\n    // Remove the active class from all elements\n    el.node.classList.remove(el.className)\n\n    // If the pattern matches, then set the active class\n    if (el.pattern.test(location)) {\n        el.node.classList.add(el.className)\n    }\n}\n\n// Listen to changes in the location\nloc.subscribe((value) => {\n    // Update the location\n    location = value.location + (value.querystring ? '?' + value.querystring : '')\n\n    // Update all nodes\n    nodes.map(checkActive)\n})\n\n/**\n * @typedef {Object} ActiveOptions\n * @property {string} [path] - Path expression that makes the link active when matched (must start with '/' or '*'); default is the link's href\n * @property {string} [className] - CSS class to apply to the element when active; default value is \"active\"\n */\n\n/**\n * Svelte Action for automatically adding the \"active\" class to elements (links, or any other DOM element) when the current location matches a certain path.\n * \n * @param {HTMLElement} node - The target node (automatically set by Svelte)\n * @param {ActiveOptions|string} [opts] - Can be an object of type ActiveOptions, or a string representing ActiveOptions.path.\n */\nexport default function active(node, opts) {\n    // Check options\n    if (opts && typeof opts == 'string') {\n        // Interpret strings as opts.path\n        opts = {\n            path: opts\n        }\n    }\n    else {\n        // Ensure opts is a dictionary\n        opts = opts || {}\n    }\n\n    // Path defaults to link target\n    if (!opts.path && node.hasAttribute('href')) {\n        opts.path = node.getAttribute('href')\n        if (opts.path && opts.path.length > 1 && opts.path.charAt(0) == '#') {\n            opts.path = opts.path.substring(1)\n        }\n    }\n\n    // Default class name\n    if (!opts.className) {\n        opts.className = 'active'\n    }\n\n    // Path must start with '/' or '*'\n    if (!opts.path || opts.path.length < 1 || (opts.path.charAt(0) != '/' && opts.path.charAt(0) != '*')) {\n        throw Error('Invalid value for \"path\" argument')\n    }\n\n    // Get the regular expression\n    const {pattern} = regexparam(opts.path)\n\n    // Add the node to the list\n    const el = {\n        node,\n        className: opts.className,\n        pattern\n    }\n    nodes.push(el)\n\n    // Trigger the action right away\n    checkActive(el)\n\n    return {\n        // When the element is destroyed, remove it from the list\n        destroy() {\n            nodes.splice(nodes.indexOf(el), 1)\n        }\n    }\n}\n","<script>\n  import Layout from \"src/routes/_layout.svelte\";\n  import Nav from  \"components/Nav.svelte\";\n  import { link, push } from 'svelte-spa-router'; \n  import active from 'svelte-spa-router/active';\n  export let params = {};\n\n  const links = [\"lesson\", \"hometask\"];\n\n  const slug = (title) => {\n    return title\n      .toLowerCase()\n      .replace(/\\s/g, \"-\");   \n  };\n\n  const URL = \"./data/journal.json\";\n  const journal = getJournal();\n  \n \tasync function getJournal(){\n    try {\n      const res = await fetch(URL);\n      const data = await res.json();\n      return data;\n    } catch(err) {   \n      throw new Error(err);\n    }\n  }\n</script>\n\n<Layout>\n  <div slot=\"sidebar\">\n    <div class=\"flex items-center text-lg leading-loose pb-4 px-2\">\n      <span class=\"icon pr-2\">\n        <i class=\"icon-girl\" />\n      </span>\n      Welcome, {params.name ? params.name : \"Xiao\"}!</div>\n    <nav>\n      <ul>\n        {#each links as item}\n          <li>\n            <a href=\"/{item}\" use:link use:active>\n              <span class=\"icon pr-2\">\n                <i class=\"icon-{item}\" />\n              </span>\n              {item}\n            </a>\n          </li>\n        {/each}\n      </ul>\n    </nav>\n  </div>\n  <div slot=\"main\">\n    <h2 class=\"title pb-4\">Active</h2>\n    {#await journal then data}\n    <div class=\"rounded border bg-white p-6\">\n      <ul>\n        {#each data.tests as item}\n          <button on:click={() => push(`/${params.lesson}/${slug(item)}`)}>{item}</button>\n          <br/>\n        {/each}\n      </ul>\n    </div>\n    {:catch error}\n      <!-- promise was rejected -->\n      Error\n    {/await}\n    <!-- <h2 class=\"title\">Completed</h2>\n    <div class=\"tasks_comleted\">\n      Here done cards\n    </div> -->\n  </div>\n</Layout>","<script>\n  import { createEventDispatcher } from 'svelte';\n  export let selected;\n  export let variants; \n  export let context; \n  export let word;\n  export let type; \n  const dispatch = createEventDispatcher();  \n\n  $: if (word) {\n    const regexp = new RegExp(\"<[0-9]+A>[\\s]*\" + word + \"[\\s]*<\\/[0-9]+A>\", \"gi\");\n    const highlight = ` <span class=\"highlight\">${word}</span> `;\n    context = context.replace(regexp, highlight);\n  };\n\n  function handleClick(index){\n    dispatch(\"select\", index);\n  }\n</script>\n\n{#each variants as {variant}, i }\n  <label for={i} class=\"label py-2\">\n    <span class=\"custom-radio pr-2\" class:checked={i === selected}>\n      <input class=\"radio-input\" id={i} value={i} type=\"radio\" on:click={() => handleClick(i)}>\n      <span class=\"custom-radio-inner\" ></span>\n    </span>           \n    <span>{variant}</span>\n  </label>\n{/each}\n\n<div class=\"mt-4 text-xl text-justify\">{@html context}</div>\n\n<style> \n  .label {\n    cursor: pointer;  \n    display: flex;\n    align-items: center  \n  }\n  .radio-input {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 1;\n    cursor: pointer;\n    opacity: 0;\n  }\n  .custom-radio {\n    position: relative;\n  }\n  .custom-radio-inner {\n    @apply border block border-grey-5 bg-transparent;\n    position: relative;\n    width: 16px;\n    height: 16px;\n    border-radius: 100%;  \n  }\n  .checked > .custom-radio-inner {\n    @apply border-primary;\n    transition: all 0.3s;\n  }  \n  .custom-radio-inner:after {\n    content: \"\";\n    position: absolute;\n    top: 3px;\n    left: 3px;\n    display: table;\n    width: 8px;\n    height: 8px;\n    border-radius: 8px;   \n    opacity: 0;\n    transform: scale(0);\n    /* transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86); */\n  }\n  .checked > .custom-radio-inner:after {\n    @apply bg-primary;\n    opacity: 1;\n    transform: scale(1);\n    transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86);\n  }\n\n  :global(.highlight) {\n    @apply bg-primary text-white p-1;\n  }\n</style>","<script>\n  import { createEventDispatcher } from 'svelte';\n  export let question; \n  export let selected;\n  const dispatch = createEventDispatcher();  \n  // const { variants } = question;\n\n  $: isChecked = (index) => { \n    if (selected === undefined) return false;\n    return selected.includes(index);\n  };\n\n  function handleClick(index){\n    if (selected === undefined) {\n      dispatch(\"select\", [index]);\n      return;\n    }\n    if (selected.includes(index)) {      \n      dispatch(\"select\", selected.filter(selectedIndex => selectedIndex !== index)); \n      return;\n    }\n    dispatch(\"select\", [...selected, index]);  \n  }\n</script>\n\n<!-- {#each question.variants as {variant}, i}\n  <label for={i} class=\"flex cursor-pointer py-2\">\n    <span class=\"custom-checkbox pr-2\" class:checked={isChecked(i)}>\n      <input class=\"checkbox-input\" id={i} type=\"checkbox\" on:click={() => handleClick(i)}>\n      <span class=\"custom-checkbox-inner\"></span>\n    </span>           \n    <span>{variant}</span>\n  </label>\n{/each} -->\n\n<style>\n  .checkbox-input {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 1;\n    opacity: 0;\n  }\n  .custom-checkbox {\n    position: relative;\n  }\n  .custom-checkbox.checked:after {\n    @apply border-primary;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: 1px solid #1890ff;\n    border-radius: 2px;\n    visibility: hidden;\n    /* animation: checkboxEffect 0.36s ease-in-out;\n    animation-fill-mode: backwards; */\n    content: '';\n  }\n  .custom-checkbox-inner {\n    @apply border block border-grey-5 bg-transparent;\n    position: relative;\n    width: 16px;\n    height: 16px;\n    margin: 3px;\n    transition: all 0.3s;\n  }\n  .checked > .custom-checkbox-inner {\n    @apply bg-primary border-primary;\n  }\n  .custom-checkbox-inner:after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 22%;\n    display: table;\n    width: 5.71428571px;\n    height: 9.14285714px;\n    border: 2px solid #fff;\n    border-top: 0;\n    border-left: 0;\n    transform: rotate(45deg) scale(0) translate(-50%, -50%);\n    transition: all 0.1s cubic-bezier(0.71, -0.46, 0.88, 0.6), opacity 0.1s;\n    opacity: 0;\n  }\n  .checked > .custom-checkbox-inner:after {\n    opacity: 1;\n    transform: rotate(45deg) scale(1) translate(-50%, -50%);\n    transition: all 0.2s cubic-bezier(0.12, 0.4, 0.29, 1.46) 0.1s;\n  }\n\n  /* @keyframes checkboxEffect {\n    0% {\n      -webkit-transform: scale(1);\n              transform: scale(1);\n      opacity: 0.5;\n    }\n    100% {\n      -webkit-transform: scale(1.6);\n              transform: scale(1.6);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes checkboxEffect {\n    0% {\n      -webkit-transform: scale(1);\n              transform: scale(1);\n      opacity: 0.5;\n    }\n    100% {\n      -webkit-transform: scale(1.6);\n              transform: scale(1.6);\n      opacity: 0;\n    }\n  } */\n</style>","<script>\n  import { createEventDispatcher } from 'svelte';\n  export let selected;\n  export let question;\n  const dispatch = createEventDispatcher();  \n  // const { variants, sentence } = question;\n\n  $: isChecked = (index) => { \n    if (selected === undefined) return false;\n    return selected.includes(index);\n  };\n\n  function handleClick(index){\n    dispatch(\"select\", index);\n  }\n</script>\n\n<!-- <div class=\"bg-primary text-xl text-white rounded p-2\">{question.sentence}</div> -->\n<!-- <div class=\"flex flex-col mt-6\">\n  {#each question.variants as {variant}, i}\n    <label for={i} class=\"label py-2\">\n      <span class=\"custom-radio pr-2\" class:checked={i === selected}>\n        <input class=\"radio-input\" id={i} value={i} type=\"radio\" on:click={() => handleClick(i)}>\n        <span class=\"custom-radio-inner\" ></span>\n      </span>           \n      <span>{variant}</span>\n    </label>\n  {/each}\n</div> -->\n\n<style> \n  .label {\n    cursor: pointer;  \n    display: inline-flex;\n    align-items: center;\n    width: 50px; \n  }\n  .radio-input {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 1;\n    cursor: pointer;\n    opacity: 0;\n  }\n\n  .custom-radio {\n    position: relative;\n  }\n  .custom-radio-inner {\n    @apply border block border-grey-5 bg-transparent;\n    position: relative;\n    width: 16px;\n    height: 16px;\n    border-radius: 100%;  \n  }\n  .checked > .custom-radio-inner {\n    @apply border-primary;\n    transition: all 0.3s;\n  }  \n  .custom-radio-inner:after {\n    content: \"\";\n    position: absolute;\n    top: 3px;\n    left: 3px;\n    display: table;\n    width: 8px;\n    height: 8px;\n    border-radius: 8px;   \n    opacity: 0;\n    transform: scale(0);\n    /* transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86); */\n  }\n  .checked > .custom-radio-inner:after {\n    @apply bg-primary;\n    opacity: 1;\n    transform: scale(1);\n    transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86);\n  }\n</style>","<script>\n  import Radio from \"./Radio.svelte\"; \n  import Check from \"./Check.svelte\";\n  import Insert from \"./Insert.svelte\";\n  import Column from \"./Column.svelte\";\n  export let question;\n  export let selected;\n  export let context;\n\n  const controls = {\n    select: Radio,\n    word: Radio,   \n    check: Check,\n    insert: Insert,   \n    column: Column\n  };\n</script>\n\n<svelte:component  \n  this={controls[question.type]}\n  {context} \n  {selected} \n  {...question} \n  on:select \n/>","<script>\n  // import { onMount } from \"svelte\"; \n  import { createEventDispatcher } from 'svelte';\n  import Button from \"components/UI/Button.svelte\";\n  import Controls from \"./types/index.svelte\";\n  export let question = {};\n  export let questionsCount;\n  export let context;\n  export let active;\n  export let answers;\n  const dispatch = createEventDispatcher();\n  \n  $: selected = answers.get(active);\n\n  // const score = [];\n  // let finish = false;\n  // $: if (active === questionsCount && !finish) {\n  //   finish = true;\n  //   for (let [key, value] of answers) {\n  //     score.push([key + 1]);\n  //   }\n  // }\n\n  function selectVariant(variant) {    \n    dispatch(\"select\", {newAnswers: [active, variant]});\n  };\n  function nextQuestion() {\n    dispatch(\"click\", {newActive: active + 1});\n  };\n  function prevQuestion() {\n    dispatch(\"click\", {newActive: active - 1});\n  };\n</script>\n\n<div class=\"container rounded border bg-white p-8\">\n  {#if active < questionsCount}\n    <h1 class=\"text-black text-xl mb-6\">{question.title}</h1>\n    <Controls      \n      {selected} \n      {question}\n      {context}\n      on:select={(e) => selectVariant(e.detail)}\n    />\n    <!-- {#if context}\n      <Context\n        {active}\n        {selected} \n        {context}\n        type={question.type}\n      />\n    {/if} -->\n  {:else}  \n    <p class=\"p-8 text-xl\">That`s all! This test has been finished.</p>\n    <p>Summary:</p>\n  {/if}\n</div>\n\n{#if active < questionsCount}\n  <div class=\"flex p-8 justify-center md:justify-end\">\n    <Button type=\"secondary\" disabled={active === 0} on:click={prevQuestion}>Previous</Button>\n    <Button type=\"primary\" on:click={nextQuestion}>\n      {active === (questionsCount - 1) ? \"Finish\" : \"Next\"} \n    </Button>   \n  </div>\n{/if}","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { fade } from \"svelte/transition\";\n  export let title;\n  export let nav = [];\n  export let active;\n  export let answers;\n  const dispatch = createEventDispatcher();\n    \n  const shortTitle = (title) => {\n    return title.split(\" \").slice(0, 6).join(\" \");\n  };\n\n  $: hasAnswer = (questionIndex) => {\n    return answers.has(questionIndex);\n  };\n\n  function changeQuestion(i){\n    dispatch(\"click\", {newActive: i});\n  };\n</script>\n\n<div class=\"questions-list\">\n  <div class=\"border-t border-b px-4 py-2\">\n      {title} \n      <!-- <button class=\"float-right\">\n        <span class=\"icon\"><i class=\"icon-arrow-up\" /></span>\n      </button> -->\n  </div>\n  <div class=\"pr-2 pl-2 py-2\">  \n    {#each nav as item, i (i)}\n      <a class=\"item\" class:active={i === active} href=\"/#{i}\" on:click|preventDefault={() => changeQuestion(i)}>\n        <span class=\"px-2\">{i+1}</span>\n        <span>{shortTitle(item.title)}...</span> \n        <span class=\"float-right mr-2 w-5\">\n          {#if hasAnswer(i)}\n            <span class=\"icon\" in:fade={{ duration: 300 }}>\n              <i class=\"icon-check\"></i>\n            </span>\n          {/if}\n        </span>  \n      </a>\n    {/each}\n  </div>    \n</div>\n\n<style>\n  .space {\n    @apply px-4 py-2;\n  }\n  .item {\n    @apply block py-2 text-sm;\n  }\n  .item.active {\n    @apply bg-blue-1 rounded;\n  }\n  .item:hover {    \n    @apply text-primary;\n  }\n</style>\n","function getFragments(text, fragmentsCount){\n  let fragments = [];\n  for (let i = 1; i < fragmentsCount; i++ ) {\n    let template = new RegExp(\"(?<=\" + i + \">)(.*?)(?=<\\/\" + i + \">)\");\n    let fragment = text.match(template)[0];\n    fragments.push(fragment);\n  }\n\n  // if (!fragment.length) {\n  //   console.log(\"No context provided or context should be markuped\");\n  //   return;\n  // }\n\n  // fragment = fragment.replace(/(?=<)(.*?)(?:>)/g, \"\");\n\n  return fragments;\n}\n\nexport default (test) => {\n  return {\n    ...test,\n    fragments: getFragments(test.context, test.questions.length)\n  }\n}","<script>\n  import { onMount } from \"svelte\";\n  // import { writable } from 'svelte/store'; \n  import Layout from \"src/routes/_layout.svelte\";\n  import Button from \"components/UI/Button.svelte\";  \n  import QuestionArea from \"components/Questions/QuestionArea.svelte\";\n  import QuestionsNav from \"components/Questions/QuestionsNav.svelte\";\n  import parse from \"src/utils/parse-test-data.js\";\n  import { pop } from 'svelte-spa-router';\n  export let params = {};\n\n  const URL = `./data/tests/${params.test}.json`;\n  let test;\n\n  onMount(async () => await fetch(URL)\n    .then(response => response.json())\n    .then(data => test = parse(data))\n    .catch(error => console.error(\"error\", error))\n  );\n\n  let active = 0;\n  let answers = new Map();\n\n  function changeActive({ detail }){\n    active = detail.newActive;\n  };\n\n  function changeAnswers({ detail }){\n    answers = answers.set(...detail.newAnswers);\n  };\n</script>\n\n{#if test}\n  <Layout>\n    <div slot=\"sidebar\">  \n      <div class=\"sidebar-panel px-4 py-2 mb-6\">\n        <Button type=\"link\" on:click={pop}>\n          <span class=\"icon pr-2\">\n            <i class=\"icon-arrow-left\"/>\n          </span>  \n          Back\n        </Button>        \n       </div>\n      <div class=\"sidebar-panel\">\n        <div class=\"font-semibold capitalize text-black px-4 py-2\">\n          {params.lesson} plan\n        </div>\n        <QuestionsNav          \n          {active} \n          {answers}\n          nav={test.questions} \n          title={test.title}\n          on:click={changeActive}\n        />\n      </div>\n    </div>    \n    <div slot=\"main\">\n      <QuestionArea \n        {active} \n        {answers} \n        question={test.questions[active]} \n        context={test.fragments[active]}    \n        questionsCount={test.questions.length}           \n        on:click={changeActive} \n        on:select={changeAnswers}\n      />\n      <!-- Score -->\n      <!-- Buttons -->\n    </div>\n  </Layout>\n{:else}\n  <p>Error: </p>\n{/if}","import Index from \"./routes/Index.svelte\";\nimport Lesson from \"./components/Lesson/index.svelte\";\nimport Questions from \"components/Questions/index.svelte\";\nimport NotFound from \"./routes/NotFound.svelte\";\n\nconst routes = {\n  \"/\": Index,\n  \"/:lesson\": Lesson,\n  \"/:lesson/:test\": Questions,\n  \"*\": NotFound\n};\n\nexport default routes;\n","import \"./main.css\";\nimport App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.querySelector(\"#app\")\n});\n\nexport default app;\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","merged","len","Math","max","length","i","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","stylesheet","current_component","active","current_rules","delete_rule","style","animation","split","filter","anim","indexOf","join","cssRules","deleteRule","set_current_component","component","get_current_component","Error","createEventDispatcher","$$","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","flush","update","pop","callback","has","add","clear","fragment","before_update","p","after_update","promise","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","duration","create_in_transition","params","animation_name","config","running","uid","cleanup","go","delay","easing","tick","css","ease","step","keyframes","t","rule","str","hash","charCodeAt","head","sheet","insertRule","create_rule","start_time","end_time","abort","fulfill","[object Object]","loop","started","then","destroy_block","lookup","key","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","l","Array","from","childNodes","intro","SvelteComponent","this","$destroy","index","splice","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","sync","result","unsubscribers","loose","RegExp","keys","pattern","tmp","ext","arr","shift","substring","getLocation","hashPosition","location","href","substr","qsPosition","querystring","loc","$loc","setTimeout","history","back","link","tagName","toLowerCase","charAt","routes","prefix","RouteItem","path","_sveltesparouter","regexparam","route","conditions","userData","undefined","_pattern","_keys","startsWith","matches","exec","out","routesIterable","entries","routesList","componentParams","dispatchNextTick","match","checkConditions","disabled","nodes","checkActive","el","remove","className","test","opts","hasAttribute","tests","info","token","resolved","child_ctx","current","needs_flush","blocks","mount","error","catch","URL","slug","title","replace","journal","res","fetch","json","err","getJournal","lesson","item","selected","variants","word","handleClick","regexp","highlight","question","levels","updates","to_null_out","accounted_for","n","spread_props","controls","select","Radio","check","Check","Insert","column","Column","questionsCount","answers","selectVariant","variant","newAnswers","get","newActive","fade","linear","getComputedStyle","opacity","preventDefault","old_blocks","get_key","dynamic","list","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","nav","changeQuestion","hasAnswer","questionIndex","getFragments","fragmentsCount","fragments","template","questions","response","parse","console","/","/:lesson","/:lesson/:test","*","querySelector"],"mappings":"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"}